{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredit","Debits","console","log","debits","debit","addDebit","App","calculateAccountBalance","totalCredits","totalDebits","length","i","toFixed","logInInfo","newUser","currentUser","getCleanedCurrDate","currDate","Date","now","toLocaleString","split","data","currDateId","Number","a","debitsUrl","axios","get","creditsData","debitsData","response","status","basePath","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b2a20a.chunk.js","sourcesContent":["// src/components/AccountBalance.js\r\n\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","// src/components/Home.js\r\n// The Home component is used to demonstrate the use of Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        \r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","// src/components/UserProfile.js\r\n// The UserProfile component is used to demonstrate the use of Route and Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h1>User Profile</h1>\r\n\r\n          <div>Username: {this.props.userName}</div>\r\n          <div>Member Since: {this.props.memberSince}</div>\r\n          \r\n          <Link to=\"/\">Return to Home</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","// src/components/Login.js\r\n// The LogIn component is used to demonstrate the use of Redirect.\r\n\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogIn extends Component {\r\n  constructor () {  // Create and initialize state\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  // When the user name input is changed, capture the input and update the state (user.userName)\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n  \r\n  render () {\r\n    if (this.state.redirect) {  // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n    // Render the login form\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>                  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","// src/components/Credits.js\r\n\r\nconst Credits = (props) => {\r\n\tlet creditsView = () => {\r\n    const { credits } = props;\r\n    return credits.map((credit) => {\r\n      let date = credit.date.slice(0,10);\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\r\n    }) \r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      {creditsView()}\r\n      <form onSubmit={props.addCredit}>\r\n        Description: <input type=\"text\" name=\"description\" />\r\n        Amount: <input type=\"number\" name=\"amount\" />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Credits;","// src/components/Debits.js\r\n\r\nconst Debits = (props) => {\r\n\tconsole.log(props);\r\n\tlet debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n    }) \r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      {debitsView()}\r\n      <form onSubmit={props.addDebit}>\r\n        Description: <input type=\"text\" name=\"description\" />\r\n        Amount: <input type=\"number\" name=\"amount\" />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Debits;","// src/App.js\r\n\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from \"./components/Credits\";\r\nimport Debits from \"./components/Debits\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      },\r\n\t  credits: [],\r\n\t  debits: [],\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n\tlet creditsUrl = \"https://moj-api.herokuapp.com/credits\";\r\n\tlet debitsUrl = \"https://moj-api.herokuapp.com/debits\";\r\n\t\r\n\ttry {\r\n\t\tlet creditsData = await axios.get(creditsUrl);\r\n\t\tlet debitsData = await axios.get(debitsUrl);\r\n\t\t\r\n\t\tthis.setState({credits:creditsData.data,debits:debitsData.data}, ()=>{this.calculateAccountBalance();});\r\n\t\t\r\n\t}\r\n\tcatch(e) {\r\n\t\tif (e.response) {\r\n\t\t\tconsole.log(e.response.data);\r\n\t\t\tconsole.log(e.response.status);\r\n\t\t}\r\n\t\t\r\n\t}\r\n  }\r\n\r\n  calculateAccountBalance = () => {\r\n\tlet totalCredits=0;\r\n\tlet totalDebits=0;\r\n\tif (this.state.credits.length>0) {\r\n\t\tfor (let i=0; i<this.state.credits.length; i++) {\r\n\t\t\ttotalCredits+=this.state.credits[i].amount;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tif (this.state.debits.length>0) {\r\n\t\tfor (let i=0; i<this.state.debits.length; i++) {\r\n\t\t\ttotalDebits+=this.state.debits[i].amount;\r\n\t\t}\t\t\r\n\t}\r\n\t\t\r\n\tlet accountBalance = totalCredits-totalDebits;\r\n\taccountBalance = accountBalance.toFixed(2);\r\n\tthis.setState({accountBalance: accountBalance});\r\n\t\r\n\tconsole.log(\"recalc curr balance\",accountBalance);\r\n  }\r\n\r\n  \r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser}\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n  \r\n  \r\n  getCleanedCurrDate = () => {\r\n\tlet currDate = new Date(Date.now());\r\n\tcurrDate = currDate.toLocaleString().split(',')[0].split(\"/\"); // converting data into expected format for Debits component\r\n\tcurrDate = `${currDate[2]}-${currDate[0]}-${currDate[1]}`;\r\n\t\r\n\treturn currDate;\r\n  }\r\n  \r\n  addCredit = (e) => {\r\n\te.preventDefault();\r\n\tlet data = {};\r\n\t\r\n\tlet currDateId = new Date(Date.now());\r\n\tdata[\"id\"] = `${currDateId}`; // react requires unique id for each element in rendered list, so date string is being used as id \r\n\tdata[\"description\"] = e.target.description.value;\r\n\tdata[\"amount\"] = Number(e.target.amount.value);  // initial given amount from the form is a string datatype\r\n\tdata[\"date\"] = this.getCleanedCurrDate();\r\n\t\r\n\t\r\n\t// clear form data \r\n\te.target.description.value = \"\";\r\n\te.target.amount.value = \"\";\r\n\t\r\n\t\r\n\tthis.setState({credits: [...this.state.credits, data]},()=>{this.calculateAccountBalance()});\r\n  }\r\n  addDebit = (e) => {\r\n\te.preventDefault();\r\n\tlet data = {};\r\n\t\r\n\tlet currDateId = new Date(Date.now());\r\n\tdata[\"id\"] = `${currDateId}`; // react requires unique id for each element in rendered list, so date string is being used as id \r\n\tdata[\"description\"] = e.target.description.value;\r\n\tdata[\"amount\"] = Number(e.target.amount.value);  // initial given amount from the form is a string datatype\r\n\tdata[\"date\"] = this.getCleanedCurrDate();\r\n\t\r\n\t\r\n\t// clear form data \r\n\te.target.description.value = \"\";\r\n\te.target.amount.value = \"\";\r\n\t\r\n\t\r\n\tthis.setState({debits: [...this.state.debits, data]},()=>{this.calculateAccountBalance()});\r\n  }\r\n\t\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n\tconst basePath = \"/assignment4_bank-of-react/\"\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\r\n    );\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\r\n\tconst CreditsComponent = () => (<Credits addCredit={this.addCredit} credits={this.state.credits}/>)\r\n\tconst DebitsComponent = () => (<Debits addDebit={this.addDebit} debits={this.state.debits}/>)\r\n    return (\r\n      <Router >\r\n        <div>\r\n          <Route exact path={basePath} render={HomeComponent}/>\r\n          <Route exact path={basePath+\"userProfile\"} render={UserProfileComponent}/>\r\n          <Route exact path={basePath+\"login\"} render={LogInComponent}/>\r\n\t\t  <Route exact path={basePath+\"credits\"} render={CreditsComponent} />\r\n\t\t  <Route exact path={basePath+\"debits\"} render={DebitsComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}